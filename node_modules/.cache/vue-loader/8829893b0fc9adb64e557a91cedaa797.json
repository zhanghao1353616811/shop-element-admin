{"remainingRequest":"E:\\shop-element-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\shop-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\shop-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\shop-element-admin\\src\\views\\shop\\goods\\list.vue?vue&type=template&id=3bb1ed74&scoped=true&","dependencies":[{"path":"E:\\shop-element-admin\\src\\views\\shop\\goods\\list.vue","mtime":1625725496790},{"path":"E:\\shop-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623913921305},{"path":"E:\\shop-element-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1623913926490},{"path":"E:\\shop-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623913921305},{"path":"E:\\shop-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1623913926490}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}